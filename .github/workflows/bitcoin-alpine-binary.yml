name: bitcoin-alpine-binary
env:
  IMAGE_NAME: quay.io/blockstack/bitcoind
  CONTEXT: Dockerfiles/bitcoin
  DOCKERFILE: Dockerfiles/bitcoin/Dockerfile.alpine.binary

on:
  push:
    paths:
      - Dockerfiles/bitcoin/**
      - .github/workflows/bitcoin-alpine-binary.yml
  pull_request:
    paths:
      - Dockerfiles/bitcoin/**
      - .github/workflows/bitcoin-alpine-binary.yml

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(cat ${CONTEXT}/VERSION)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ${{ env.DOCKERFILE }}
          context: ${{ env.CONTEXT }}
          #tags: ${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          build-args: BTC_VERSION=${{ env.RELEASE_VERSION }}
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }} #${{ env.RELEASE_VERSION }}
          release_name: Bitcoin Core - ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          # repo: xxx

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: /srv/*-v${{ env.RELEASE_VERSION }}*.tar.gz
          asset_name: bitcoin-${{ env.RELEASE_VERSION }}.tar.gz
          asset_content_type: application/zip
