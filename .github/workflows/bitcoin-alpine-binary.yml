name: bitcoin-alpine-binary
env:
  IMAGE_NAME: quay.io/blockstack/bitcoind
  CONTEXT: Dockerfiles/bitcoin
  DOCKERFILE: Dockerfiles/bitcoin/Dockerfile.alpine.binary

on:
  push:
    paths:
      - Dockerfiles/bitcoin/Dockerfile.alpine.binary
      - Dockerfiles/bitcoin/make_binary_dist.sh
      - Dockerfiles/bitcoin/VERSION
      - .github/workflows/bitcoin-alpine-binary.yml
  pull_request:
    paths:
      - Dockerfiles/bitcoin/Dockerfile.alpine.binary
      - Dockerfiles/bitcoin/make_binary_dist.sh
      - Dockerfiles/bitcoin/VERSION
      - .github/workflows/bitcoin-alpine-binary.yml

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node: [6, 8, 10]
  #   steps:
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node }}
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker
          driver-opts: network=host

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(cat ${CONTEXT}/VERSION)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ${{ env.DOCKERFILE }}
          context: ${{ env.CONTEXT }}
          tags: ${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          build-args: BTC_VERSION=${{ env.RELEASE_VERSION }}
          push: false

      # - name: Generate Changelog
      #   run: echo "Bitcoin Core ${{ env.RELEASE_VERSION }}" > ${{ github.workflow }}-CHANGELOG.txt

      - name: Copy Binary to Local
        shell: bash
        run: |
          docker rm -f bitcoin-binary || true
          docker create --name bitcoin-binary ${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          docker cp bitcoin-binary:/srv/build build
          docker rm -f bitcoin-binary

      - name: Archive binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binary-archive
          path: |
            build


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Bitcoin Core - ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          files: build/*.tar.gz
          # body_path: ${{ github.workflow }}-CHANGELOG.txt
          # body: |
          #   Alpine Bitcoin Binaries for version: ${{ env.RELEASE_VERSION }}
          #   - statoshi fork: https://github.com/jlopp/statoshi
          #   - btc main: https://github.com/bitcoin/bitcoin
          #   - btc main (without wallet or some rpc commands): https://github.com/bitcoin/bitcoin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
