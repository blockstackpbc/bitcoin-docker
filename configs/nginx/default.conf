limit_req_zone global zone=blockstacklimits:32k rate=5r/s;

server {
  server_name  testnet.blockstack.org;

  index index.html index.htm;
  root /var/www/html;

  location = /favicon.ico {
    log_not_found off;
  }

  location ~ \.(html|css|js|log) {
    try_files $uri $uri/ =404;
  }

  location = / {
    try_files $uri $uri/ =404;
  }

  location / {
    limit_req zone=blockstacklimits burst=1000; # nodelay;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://testFramework;
  }

  location /healthz {
    satisfy any;
    allow 127.0.0.1;
    allow 10.1.0.0/16;
    allow 172.18.0.0/16;
    allow ::1;
    deny all;
    access_log off;
    return 200;
  }

  location /nginx_status {
    satisfy any;
    allow 127.0.0.1;
    allow 10.1.0.0/16;
    allow 172.18.0.0/16;
    allow ::1;
    deny all;
    access_log off;
    stub_status on;
  }

  location /metrics {
    satisfy any;
    allow 127.0.0.1;
    allow 10.1.0.0/16;
    allow 172.18.0.0/16;
    allow ::1;
    deny all;
    access_log off;
    stub_status on;
  }

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/testnet.blockstack.org/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/testnet.blockstack.org/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = testnet.blockstack.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  listen       80;
  listen       [::]:80;
  server_name  testnet.blockstack.org;
    return 404; # managed by Certbot
}
