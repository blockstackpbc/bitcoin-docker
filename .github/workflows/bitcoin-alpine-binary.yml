name: bitcoin-alpine-binary
env:
  QUAY_IMAGE: quay.io/blockstack/bitcoind
  DOCKERHUB_IMAGE: blockstack/bitcoind
  CONTEXT: Dockerfiles/bitcoin
  BINARY_DOCKERFILE: Dockerfiles/bitcoin/Dockerfile.alpine.binary
  DOCKERFILE: Dockerfiles/bitcoin/Dockerfile.alpine


on:
  push:
    paths:
      - Dockerfiles/bitcoin/Dockerfile.alpine.binary
      - Dockerfiles/bitcoin/Dockerfile.alpine
      - Dockerfiles/bitcoin/make_binary_dist.sh
      - Dockerfiles/bitcoin/VERSION
      - .github/workflows/bitcoin-alpine-binary.yml
  pull_request:
    paths:
      - Dockerfiles/bitcoin/Dockerfile.alpine.binary
      - Dockerfiles/bitcoin/Dockerfile.alpine
      - Dockerfiles/bitcoin/make_binary_dist.sh
      - Dockerfiles/bitcoin/VERSION
      - .github/workflows/bitcoin-alpine-binary.yml

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       build: ["", "-statoshi", "-norpc"]
  #   steps:
  #     - uses: actions/setup-node@v1
  #       with:
  #         btc-build: ${{ matrix.build }}
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker
          driver-opts: network=host

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(cat ${CONTEXT}/VERSION)" >> $GITHUB_ENV

      - name: Build Binary Archive
        uses: docker/build-push-action@v2
        with:
          file: ${{ env.BINARY_DOCKERFILE }}
          context: ${{ env.CONTEXT }}
          tags: ${{ env.QUAY_IMAGE }}:${{ env.RELEASE_VERSION }}
          build-args: |
            BTC_VERSION=${{ env.RELEASE_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: false

      - name: Copy Binary to Local
        shell: bash
        run: |
          docker rm -f bitcoin-binary || true
          docker create --name bitcoin-binary ${{ env.QUAY_IMAGE }}:${{ env.RELEASE_VERSION }}
          docker cp bitcoin-binary:/srv/build build
          docker rm -f bitcoin-binary

      - name: Archive Binary Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: bitcoin-${{ env.RELEASE_VERSION }}.tar.gz
          path: |
            build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Bitcoin Core - ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          files: build/*.tar.gz
          # body_path: ${{ github.workflow }}-CHANGELOG.txt
          # body: |
          #   Alpine Bitcoin Binaries for version: ${{ env.RELEASE_VERSION }}
          #   - statoshi fork: https://github.com/jlopp/statoshi
          #   - btc main: https://github.com/bitcoin/bitcoin
          #   - btc main (without wallet or some rpc commands): https://github.com/bitcoin/bitcoin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and Push Image
      #   uses: docker/build-push-action@v2
      #   with:
      #     file: ${{ env.DOCKERFILE }}
      #     context: ${{ env.CONTEXT }}
      #     build-args: |
      #       BTC_VERSION=${{ env.RELEASE_VERSION }}
      #     push: true
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      #     tags: |
      #       ${{ env.QUAY_IMAGE }}:${{ env.RELEASE_VERSION }}
      #       ${{ env.DOCKERHUB_IMAGE }}:${{ env.RELEASE_VERSION }}
